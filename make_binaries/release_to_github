#!/bin/bash

# FIRST : Run make_binaries on checked out tag

# SECOND, MODIFY  Release Notes (edit first part before "### About ...")
read -r -d '' RELEASE_NOTES << ---

Changes :

* Main window -- Windows 10, fix hidden error dialog
* Main window -- Windows10, fix drag-and-drop folder to main window (did not work at first run)
* Main window -- Windows 10, fix that repo dropdown menu did not show when having graph open
* Main window -- force git-fetch (don't wait for timed git-fetch event) by selecting current repo from repo-menu
* Main window -- Show git download link, if git is not installed
* Modified files window -- "Restore all" in modified files list now deletes files created after last commit (and as before, resets modified files to last commit).
* Settings -- Jump to Remote Tab, after cloning (to allow tweaking of push settings)
* Settings -- Add drag-and-drop of folders to repository setting dialogs. Modify look when dragging to main window.
* Settings -- Scaling in main window updates after change and return
* Settings -- Dark mode of main window updates after change
* Settings -- Always on top defaults to false on first run
* Graph window -- Click graph branch name from list, blink node with text to help noticing top of branch
* Merge & Notes window -- Now follows zoom from settings correctly
* Notes window -- Contextual table menu works
* Updated simple-git -- Fixed vulnerability CVE-2022-24433
* Improved Mac installer with readme file
* Only build for 64-bit systems


___
### About Pragma-git
The aim with Pragma-git is to be
- ”pragmatic” — aiming to be the opposite to how many beginners perceive git
- easy to start — and something to grow in for daily programming tasks
- friendly — guiding you through risks of data loss with pop-up warnings and instructions

Read more on the home page : https://pragma-git.github.io

### Quick Install

Download the *one* installer that matches your system from the "__*assets*__" link below: 
- __win-x64.exe__ (Windows 64 bit) 
- __mac-x64.dmg__ (Mac 64 bit)
- __linux-x64.deb__ (Linux 64 bit for Ubuntu, Linux Mint, Debian, ...)
- __linux-x64.rpm__ (Linux 64 bit RedHat, Fedora, CentOS, openSUSE, ...)

[Install instructions](https://pragma-git.github.io#installation)
---


# Tag to use for this Release (from package.json)
TAG=$(cat ../package.json | grep 'version' | cut -d'"' -f4)
echo "TAG = $TAG"

# Release Title from Tag
RELEASE_TITLE="Release $TAG"
echo "RELEASE_TITLE = $RELEASE_TITLE"



# NOTE : If header name in https://pragma-git.github.io is changed, its element id will be changed.  
# Modify link above from "installation" to new id (the id can be found by from html-source of https://pragma-git.github.io).

exit 1
TOKEN_FILE="../../mytoken.txt"  #NOTE: Token requires scopes: repos, write:packages, admin:org, and maybe user
REPO=pragma-git/pragma-git

#
# Create Release and Upload binaries
#

    # Login
    echo 'LOG IN TO GITHUB'
    gh auth login --with-token < "$TOKEN_FILE"
    #gh auth login --web
    
    # Create Release
    echo 'CREATE RELEASE'
    gh release create \
      $TAG \
      --repo "$REPO" \
      --draft \
      --notes "$RELEASE_NOTES" \
      --title "$RELEASE_TITLE"
      
    # Upload binaries  
    echo 'UPLOAD BINARIES'
    cd '/Users/jan/Documents/Projects/Pragma-git/dist/'

    echo 'UPLOAD MAC'
    gh release upload  $TAG  --repo "$REPO"  "$(ls mac/Pragma-git*.dmg)" 
    echo 'UPLOAD WIN64'
    gh release upload  $TAG  --repo "$REPO"  "$(ls win64/Pragma-git*.exe)" 
    echo 'UPLOAD LINUX DEB'
    gh release upload  $TAG  --repo "$REPO"  "$(ls linux64/Pragma-git*.deb)" 
    echo 'UPLOAD LINUX RPM'
    gh release upload  $TAG  --repo "$REPO"  "$(ls linux64/Pragma-git*.rpm)" 

#
# DONE
#
    echo ' '
    echo '=====' 
    echo 'DONE '
    echo '====='     

    read -n 1 -s -r -p "DONE : Press any key to continue" && echo ' '
