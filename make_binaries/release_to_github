#!/bin/bash
#
# This script builds a github release. 
#
# Requires 
#   0) Tag for pragma-git repo matches version from package.json
#   1) Run ./build on checked out tag
#   2) Modify the text in CHANGES below

# Changes section :

read -r -d '' CHANGES << ---
* Main -- dialog for commiting when in detached branch. Options to merge immediately to branch, delete, or make temporary branch ( TODO: fix help)
* Main -- add dialog for unsaved changes on detached HEAD (options to stash or delete)
* Main -- fix bug where manual push failed when auto-push setting was off
* Main -- debug of git commands can be enabled manually in settings.json ( debug : true)
* Main -- error message makes git's suggested git commands to run on click of hyperlink
* Settings -- dark/light mode, and window scaling, are updated immediately
* Settings -- edit global author info
* Settings -- add multiple remotes (can merge from multiple remotes, for instance when forking)
* Settings -- add link to templates in gitignore editor
* Notes -- button to go back to earlier versions of personal notes
* Notes -- theme for input dialogs updated
* Graph -- fix that info window could not be shown on parent of selected node
* Graph -- fix positioning of info window (so it does not overlap a parent node)
* Graph -- info window improved coloring
* List of modified files --removed apply-button
* Pragma-Merge viewer -- an "all" button to merge all changes
* Pragma-Merge viewer -- a "Reload" button to start over
* Help -- improved Settings-help page (navigation through tabs)
* Help -- help on dialogs when leaving detached HEAD
* Default branch on init is now "main"
* Fixed multiple minor issues
* Add MIT License
* Support for native Apple silicon
* Fix bugs opening first time
---

#
# --------------------------------------------------------------------------------------------
#

#
# Release text
#

# Tag to use for this Release (from package.json)
TAG=$(cat ../package.json | grep 'version' | cut -d'"' -f4)
echo "TAG = $TAG"

# Release Title from Tag
RELEASE_TITLE="Release $TAG"
echo "RELEASE_TITLE = $RELEASE_TITLE"

# Generate release text
read -r -d '' RELEASE_NOTES << ---

### Downloads

[Windows](https://github.com/pragma-git/pragma-git/releases/download/$TAG/Pragma-git-$TAG-win-x64.exe)
[Mac - Intel or Rosetta](https://github.com/pragma-git/pragma-git/releases/download/$TAG/Pragma-git-$TAG-mac-x64.dmg)
[Mac - Apple silicon (M1, M2)](https://github.com/pragma-git/pragma-git/releases/download/$TAG/Pragma-git-$TAG-mac-arm64.dmg)
[Linux deb](https://github.com/pragma-git/pragma-git/releases/download/$TAG/Pragma-git-$TAG-linux-x64.deb)
[Linux rpm](https://github.com/pragma-git/pragma-git/releases/download/$TAG/Pragma-git-$TAG-linux-x64.rpm)

Or download the *one* installer that matches your system from the "__*assets*__" link below.

___
### Install

Windows : just run installer.
MacOS : ***Important*** -- follow "README.txt" on disk image. 
Linux - [read instructions](https://pragma-git.github.io#installation)

___
### Changes
$CHANGES
___
### About Pragma-git
The aim with Pragma-git is to be
- ”pragmatic” — aiming to be the opposite to how many beginners perceive git
- easy to start — and something to grow in for daily programming tasks
- friendly — guiding you through risks of data loss with pop-up warnings and instructions

Read more on the home page : https://pragma-git.github.io

---




# NOTE : If header name in https://pragma-git.github.io is changed, its element id will be changed.  
# Modify link above from "installation" to new id (the id can be found by from html-source of https://pragma-git.github.io).


TOKEN_FILE="../../mytoken.txt"  #NOTE: Token requires scopes: repos, write:packages, admin:org, and maybe user
REPO=pragma-git/pragma-git

#
# Create Release and Upload binaries
#

    # Login
    echo 'LOG IN TO GITHUB'
    gh auth login --with-token < "$TOKEN_FILE"
    #gh auth login --web
    
    # Create Release
    echo 'CREATE RELEASE'
    gh release create \
      $TAG \
      --repo "$REPO" \
      --draft \
      --notes "$RELEASE_NOTES" \
      --title "$RELEASE_TITLE"
      
    sleep 2  
      
    #exit 0 # Stop here to test without uploading files
      
    # Upload binaries  
    echo 'UPLOAD BINARIES'
    cd '/Users/jan/Documents/Projects/Pragma-git/dist/'

    echo 'UPLOAD MAC (INTEL)'
    gh release upload  $TAG  --repo "$REPO"  "$(ls mac/Pragma-git*.dmg)" 
    
    echo 'UPLOAD MAC (ARM)'
    gh release upload  $TAG  --repo "$REPO"  "$(ls mac_arm64/Pragma-git*.dmg)" 
    
    echo 'UPLOAD WINDOWS'
    gh release upload  $TAG  --repo "$REPO"  "$(ls win64/Pragma-git*.exe)" 
    
    echo 'UPLOAD LINUX DEB'
    gh release upload  $TAG  --repo "$REPO"  "$(ls linux64/Pragma-git*.deb)" 
    
    echo 'UPLOAD LINUX RPM'
    gh release upload  $TAG  --repo "$REPO"  "$(ls linux64/Pragma-git*.rpm)" 

#
# DONE
#
    echo ' '
    echo '=====' 
    echo 'DONE '
    echo '====='     

    read -n 1 -s -r -p "DONE : Press any key to continue" && echo ' '
